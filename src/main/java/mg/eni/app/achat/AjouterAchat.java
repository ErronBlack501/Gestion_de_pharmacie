/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package mg.eni.app.achat;

import com.eni.gestion_de_pharmacie.Pdf;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.postgresql.util.PSQLException;

/**
 *
 * @author erb
 */
public class AjouterAchat extends javax.swing.JDialog {

    Connection connection;
    ResultSet result;
    PreparedStatement prst;
    private int limit;

    public void connect() {
        try {
            Class.forName("org.postgresql.Driver");
            connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/gestion_pharmacie", "postgres", "administrator");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void deconnect() {
        try {
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * Creates new form ajouterMedicament
     */
    public AjouterAchat(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            connect();
            prst = connection.prepareStatement("SELECT design FROM gp.\"MEDICAMENT\" ORDER BY \"numMedoc\" ASC");
            result = prst.executeQuery();
            medocDesignComboBox.removeAllItems();

            while (result.next()) {
                medocDesignComboBox.addItem(result.getString("design"));
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            deconnect();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nomClientField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        annulerButton = new javax.swing.JButton();
        logReinitialiserBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nombreSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        medocDesignComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FORMULAIRE D'AJOUT D'UN NOUVEAU ACHAT");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LOGO");

        jLabel3.setFont(new java.awt.Font("Cantarell", 3, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("AJOUTER");

        jLabel4.setText("Nombre de médicament à acheter :");

        nomClientField.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                nomClientFieldComponentShown(evt);
            }
        });

        jButton1.setText("Ajouter");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        annulerButton.setBackground(new java.awt.Color(255, 0, 51));
        annulerButton.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        annulerButton.setForeground(new java.awt.Color(255, 255, 255));
        annulerButton.setText("Annuler");
        annulerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                annulerButtonMouseClicked(evt);
            }
        });
        annulerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerButtonActionPerformed(evt);
            }
        });

        logReinitialiserBtn.setText("Reinitialiser");
        logReinitialiserBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logReinitialiserBtnMouseClicked(evt);
            }
        });
        logReinitialiserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logReinitialiserBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Nom complet du client :");

        jLabel5.setText("medocDesign :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nomClientField, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                            .addComponent(medocDesignComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nombreSpinner))
                        .addGap(98, 98, 98))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(annulerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(logReinitialiserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(118, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(medocDesignComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nomClientField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(logReinitialiserBtn))
                .addGap(31, 31, 31)
                .addComponent(annulerButton)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (nomClientField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Le champ Nom du client ne doît pas être vide.", "AVERTISSEMENT", 1);
        } else {
            try {
                if (limit > 1){
                    annulerButton.setVisible(false);
                }
                connect();
                PreparedStatement prst1 = connection.prepareStatement("SELECT \"numMedoc\" FROM gp.\"MEDICAMENT\" WHERE design = ?");
                prst1.setString(1, (String) medocDesignComboBox.getSelectedItem());
                ResultSet result1 = prst1.executeQuery();
                String medocNumUlid = "";
                while (result1.next()) {
                    medocNumUlid = result1.getString("numMedoc");
                }
                prst = connection.prepareStatement("INSERT INTO gp.\"ACHAT\" (\"medocNum\", \"nomClient\", nbr) VALUES (CAST(? AS ulid), ?, ?)");
                prst.setString(1, medocNumUlid);
                prst.setString(2, nomClientField.getText());
                prst.setInt(3, Integer.parseInt(String.valueOf(nombreSpinner.getValue())));
                prst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Ajout de nouveau achat réussi!", "AJOUT DE ACHAT", 1);
                limit++;
                int response = JOptionPane.showConfirmDialog(this, "Voulez-vous acheter d'autres médicaments ?", "ACHAT", 0, JOptionPane.QUESTION_MESSAGE);

                if (response == 0) {
                    nomClientField.setEditable(false);
                }

                if (response == 1) {
                    String date = "";
                    String nomClient = nomClientField.getText();
                    ArrayList<String> designations = new ArrayList<>();
                    ArrayList<Integer> prixUnitaire = new ArrayList<>(), nombres = new ArrayList<>();
                    prst = connection.prepareStatement("SELECT a.\"nomClient\", a.nbr, a.\"dateAchat\", m.design, m.prix_unitaire FROM gp.\"ACHAT\" a JOIN gp.\"MEDICAMENT\" m ON m.\"numMedoc\" = a.\"medocNum\" WHERE a.\"nomClient\" = ? ORDER BY a.\"numAchat\" DESC LIMIT ?");
                    prst.setString(1, nomClientField.getText());
                    prst.setInt(2, limit);
                    result = prst.executeQuery();
                    
                    while (result.next())
                    {
                        date = result.getString("dateAchat");
                        designations.add(result.getString("design"));
                        prixUnitaire.add(result.getInt("prix_unitaire"));
                        nombres.add(result.getInt("nbr"));
                    }
                    
                    File file = new File(Pdf.DEST);
                    file.getParentFile().mkdirs();
                    new Pdf().createPdf(Pdf.DEST, date, nomClient, designations, prixUnitaire, nombres);
                    JOptionPane.showMessageDialog(this, "La facture a été bien générée.", "GÉNÉRATION DE FACTURE", JOptionPane.INFORMATION_MESSAGE);
                    Achat.staticTableauActualisation();
                    dispose();
                }
            } catch (PSQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur de requête SQL", 1);
            } catch (HeadlessException | NumberFormatException | SQLException e) {
                System.out.println(e.getMessage());
            } catch (IOException ex) {
                Logger.getLogger(AjouterAchat.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                deconnect();
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void annulerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_annulerButtonMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_annulerButtonMouseClicked

    private void annulerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annulerButtonActionPerformed

    private void logReinitialiserBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logReinitialiserBtnMouseClicked
        // TODO add your handling code here:
        try {
            connect();
            prst = connection.prepareStatement("SELECT design FROM gp.\"MEDICAMENT\" ORDER BY \"numMedoc\" ASC");
            result = prst.executeQuery();
            medocDesignComboBox.removeAllItems();

            while (result.next()) {
                medocDesignComboBox.addItem(result.getString("design"));
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            deconnect();
        }
        nomClientField.setText("");
        nombreSpinner.setValue(0);
    }//GEN-LAST:event_logReinitialiserBtnMouseClicked

    private void nomClientFieldComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_nomClientFieldComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_nomClientFieldComponentShown

    private void logReinitialiserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logReinitialiserBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logReinitialiserBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AjouterAchat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(AjouterAchat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(AjouterAchat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AjouterAchat.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            AjouterAchat dialog = new AjouterAchat(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annulerButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logReinitialiserBtn;
    private javax.swing.JComboBox<String> medocDesignComboBox;
    private javax.swing.JTextField nomClientField;
    private javax.swing.JSpinner nombreSpinner;
    // End of variables declaration//GEN-END:variables
}
