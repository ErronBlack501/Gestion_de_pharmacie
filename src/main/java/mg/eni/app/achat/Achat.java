/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mg.eni.app.achat;

import com.eni.gestion_de_pharmacie.MainMenu;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author erb
 */
public class Achat extends javax.swing.JFrame {

    static String medocDesignStatic = "";
    static String numAchatStatic = "";
    static String nomClientStatic = "";
    static int nbrStatic = 0;
    static String dateAchatStatic = "";
    static Connection con;
    static PreparedStatement pst;
    static ResultSet rs;
    Connection connection;
    PreparedStatement prst;
    ResultSet result;

    public static void staticTableauActualisation() throws SQLException {
        try {

            Class.forName("org.postgresql.Driver");
            con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/gestion_pharmacie", "postgres", "administrator");

            pst = con.prepareStatement("SELECT e.\"numAchat\", md.design, e.\"nomClient\", e.\"nbr\", e.\"dateAchat\" FROM gp.\"ACHAT\" e JOIN gp.\"MEDICAMENT\" md ON md.\"numMedoc\" = e.\"medocNum\" ORDER BY e.\"numAchat\" ASC LIMIT 50");
            rs = pst.executeQuery();

            achatTable.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "numAchat", "medocDesign", "nomClient", "Nombre", "Date d'achat"
                    }
            ));

            while (rs.next()) {
                String numAchat = rs.getString("numAchat");
                String medocDesign = rs.getString("design");
                String nomClient = rs.getString("nomClient");
                String nombre = String.valueOf(rs.getInt("nbr"));
                String dateAchat = rs.getString("dateAchat");
                String[] tabData = {numAchat, medocDesign, nomClient, nombre, dateAchat};
                DefaultTableModel tabModel = (DefaultTableModel) achatTable.getModel();
                tabModel.addRow(tabData);
            }
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            con.close();
        }
    }

    public final void connect() {
        try {
            Class.forName("org.postgresql.Driver");
            connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/gestion_pharmacie", "postgres", "administrator");
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public final void deconnect() {
        try {
            connection.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private void tableauActualisation() {
        try {

            prst = connection.prepareStatement("SELECT e.\"numAchat\", md.design, e.\"nomClient\", e.\"nbr\", e.\"dateAchat\" FROM gp.\"ACHAT\" e JOIN gp.\"MEDICAMENT\" md ON md.\"numMedoc\" = e.\"medocNum\" ORDER BY e.\"numAchat\" ASC LIMIT 50");
            result = prst.executeQuery();
            achatTable.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "numAchat", "medocDesign", "nomClient", "Nombre", "Date d'achat"
                    }
            ));

            while (result.next()) {
                String numAchat = result.getString("numAchat");
                String medocDesign = result.getString("design");
                String nomClient = result.getString("nomClient");
                String nombre = String.valueOf(result.getInt("nbr"));
                String dateAchat = result.getString("dateAchat");
                String[] tabData = {numAchat, medocDesign, nomClient, nombre, dateAchat};
                DefaultTableModel tabModel = (DefaultTableModel) achatTable.getModel();
                tabModel.addRow(tabData);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * Creates new form Medicament
     *
     * @throws SQLException
     */
    public Achat() throws SQLException {
        initComponents();
        staticTableauActualisation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        achatTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        rechercheField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Cantarell", 3, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Liste des achats :");

        jButton4.setText("Retour");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        achatTable.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "numAchat", "medocDesign", "nomClient", "Nombre", "Date d'achat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        achatTable.setShowGrid(true);
        jScrollPane1.setViewportView(achatTable);

        jButton1.setText("Ajouter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Supprimer");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Modifier");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Actualiser");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setText("Rechercher :");
        jButton6.setHideActionText(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 677, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton2)
                        .addGap(38, 38, 38)
                        .addComponent(jButton5)
                        .addGap(159, 159, 159))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rechercheField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(rechercheField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        Achat.super.dispose();
        MainMenu mm = null;
        try {
            mm = new MainMenu();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Achat.class.getName()).log(Level.SEVERE, null, ex);
        }
        mm.setLocationRelativeTo(null);
        mm.setVisible(true);
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AjouterAchat newAchat = new AjouterAchat(this, true);
        newAchat.setLocationRelativeTo(this);
        newAchat.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        int selectedRow = achatTable.getSelectedRow();
        String numAchatSelectedRow = (String) achatTable.getValueAt(selectedRow, 0);
        System.out.println(numAchatSelectedRow);
        try {
            if (achatTable.isRowSelected(selectedRow)) {
                connect();
                prst = connection.prepareStatement("DELETE FROM gp.\"ACHAT\" WHERE \"numAchat\" = CAST(? AS ulid)");
                prst.setString(1, numAchatSelectedRow);

                int response = JOptionPane.showInternalConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer cette achat?", "SUPPRESSION D'ACHAT", 0);
   
                if (response == 0) {
                    prst.executeUpdate();
                    String medocNum = "";
                    prst = connection.prepareStatement("SELECT \"numMedoc\" FROM gp.\"MEDICAMENT\" WHERE design = ?");
                    prst.setString(1, (String) achatTable.getValueAt(selectedRow, 1));
                    result = prst.executeQuery();

                    while (result.next()) {
                        medocNum = result.getString("numMedoc");
                    }

                    prst = connection.prepareStatement("UPDATE gp.\"MEDICAMENT\" SET stock = stock + ? WHERE \"numMedoc\" = CAST(? AS ulid)");
                    prst.setInt(1, Integer.parseInt((String) achatTable.getValueAt(selectedRow, 3)));
                    prst.setString(2, medocNum);
                    prst.executeUpdate();
                    tableauActualisation();
                }
            }
        } catch (NumberFormatException | SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            deconnect();
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (achatTable.isRowSelected(achatTable.getSelectedRow())) {
            int selectedRow = achatTable.getSelectedRow();
            System.out.println(achatTable.getValueAt(selectedRow, 0));
            medocDesignStatic = (String) achatTable.getValueAt(selectedRow, 1);
            numAchatStatic = (String) achatTable.getValueAt(selectedRow, 0);
            nbrStatic = Integer.parseInt((String) achatTable.getValueAt(selectedRow, 3));
            nomClientStatic = (String) achatTable.getValueAt(selectedRow, 2);
            dateAchatStatic = (String) achatTable.getValueAt(selectedRow, 4);
            ModifierAchat updateAchat = new ModifierAchat(this, true);
            updateAchat.setLocationRelativeTo(this);
            updateAchat.show();
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        try {
            connect();
            prst = connection.prepareStatement("SELECT a.\"numAchat\", md.design, a.\"nomClient\", a.nbr, a.\"dateAchat\" FROM gp.\"ACHAT\" a JOIN gp.\"MEDICAMENT\" md ON md.\"numMedoc\" = a.\"medocNum\" ORDER BY a.\"numAchat\" ASC LIMIT 50");
            result = prst.executeQuery();
            achatTable.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "numAchat", "medocDesign", "nomClient", "Nombre", "Date d'achat"
                    }
            ));
            int i = 0;
            while (result.next()) {
                String numAchat = result.getString("numAchat");
                String design = result.getString("design");
                String nomClient = result.getString("nomClient");
                String nbr = String.valueOf(result.getInt("nbr"));
                String dateAchat = result.getString("dateAchat");

                String[] tabData = {numAchat, design, nomClient, nbr, dateAchat};

                DefaultTableModel tabModel = (DefaultTableModel) achatTable.getModel();
                tabModel.addRow(tabData);
                i++;
            }

            if (i == 0) {
                JOptionPane.showMessageDialog(this, "La table ACHAT est vide!", "TABLE VIDE", 1);
            }

        } catch (HeadlessException | SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            deconnect();
        }
    }//GEN-LAST:event_jButton5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Achat.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Achat().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Achat.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable achatTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField rechercheField;
    // End of variables declaration//GEN-END:variables
}
